% Created 2018-11-20 Tue 10:17
\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{fixltx2e}
\usepackage{graphicx}
\usepackage{longtable}
\usepackage{float}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{marvosym}
\usepackage{wasysym}
\usepackage{amssymb}
\usepackage{hyperref}
\tolerance=1000
\usepackage[hyperref,x11names]{xcolor}
\usepackage[colorlinks=true,urlcolor=SteelBlue4,linkcolor=Firebrick4]{hyperref}
\usepackage{physics}
\usepackage{hyperref, url}
\usepackage[square,numbers]{natbib}
\usepackage{subcaption}
\usepackage{cases}
\graphicspath{ {./} }
\usepackage{tikz}
\usetikzlibrary{arrows,plotmarks,calc,positioning,fit}
\usetikzlibrary{shapes.geometric, decorations.pathmorphing, patterns, backgrounds}
\usepackage[square,numbers]{natbib}
\newcommand{\tikzremember}[1]{{  \tikz[remember picture,overlay]{\node (#1) at (0,11pt) { };}}}
\tikzset{snake it/.style={decorate, decoration=snake}}
\usepackage[nottoc]{tocbibind}
\date{\today}
\title{things\_to\_do}
\hypersetup{
  pdfkeywords={},
  pdfsubject={},
  pdfcreator={Emacs 25.3.1 (Org mode 8.2.10)}}
\begin{document}

\maketitle
\tableofcontents




\section{Tasks}
\label{sec-1}
\subsection{{\bfseries\sffamily TODO} Finish doing the gamma surfaces for all planes for pure titanium.}
\label{sec-1-1}
\subsubsection{{\bfseries\sffamily DONE} Implement Homogenous Shear boundary conditions for gamma surface calculation.}
\label{sec-1-1-1}
\subsection{{\bfseries\sffamily TODO} Look at the range of the bond integrals we have in Titanium graphically.}
\label{sec-1-2}
\subsubsection{{\bfseries\sffamily TODO} Plot the bond integrals of tbe with the cutoff and see what happens under different conditions.}
\label{sec-1-2-1}
\subsection{{\bfseries\sffamily TODO} Python script: remove include statements  -->  One file.}
\label{sec-1-3}
\subsection{{\bfseries\sffamily TODO} Summarise UCL DFT lectures.}
\label{sec-1-4}
\subsection{{\bfseries\sffamily TODO} Write first paragraph of Literature review}
\label{sec-1-5}
\subsubsection{{\bfseries\sffamily TODO} Summarise Stacking Faults and write review}
\label{sec-1-5-1}
\subsubsection{{\bfseries\sffamily TODO} Write up the tight binding fitting of oxygen and an explanation for paramagnetism.}
\label{sec-1-5-2}
\subsubsection{{\bfseries\sffamily TODO} Summarise dislocations and Oxygen interactions (review)}
\label{sec-1-5-3}
\subsection{{\bfseries\sffamily TODO} Write summary of org-mode}
\label{sec-1-6}
\subsection{{\bfseries\sffamily DONE} Investigate why rmaxh changes energy}
\label{sec-1-7}
\begin{itemize}
\item Variation of rmaxh does not change the energy
\item Obviously the number of neighbours changes with rmaxh.
\item Conclusion: rmaxh only determines what atoms are its neighbours.
\item This is the file which investigates this:
\href{file:///home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/check_rmaxh_energy_neighbours.py}{check$_{\text{rmaxh}}$$_{\text{energy}}$$_{\text{number}}$$_{\text{neighbours}}$}
\item Here is the data:
\href{file:///home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/energy_for_energy_vs_rmaxh.pkl}{Energy data for energy vs rmaxh}
\href{file:///home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/rmaxh_for_energy_or_n_neighbours_vs_rmaxh.pkl}{rmaxh data for energy/n$_{\text{neighbours}}$ vs rmaxh}
\href{file:///home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/n_neighbours_for_n_neighbours_vs_rmaxh.pkl}{n$_{\text{neighbours}}$ for n$_{\text{neighbours}}$ vs rmaxh}
\item The output pictures are this:
\end{itemize}
\begin{figure}[htb]
\centering
\includegraphics[width=.9\linewidth]{/home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/Energy_vs_rmaxh.png}
\caption{\label{fig:Energy_vs_rmaxh.png}Variation of energy with change in rmaxh}
\end{figure}
\begin{figure}[htb]
\centering
\includegraphics[width=.9\linewidth]{/home/tigany/Documents/ti/complete_titanium/ti_01-11-18/mod_rmaxh/n_neighbours_vs_rmaxh.png}
\caption{\label{fig:n_neighbours_vs_rmaxh.png}Variation of number of neighbours with change in rmaxh}
\end{figure}

\subsection{{\bfseries\sffamily DONE} Show supercell of BOP working}
\label{sec-1-8}


\section{General notes of codes.}
\label{sec-2}

\subsection{Pair potentials in tbe code}
\label{sec-2-1}
\begin{itemize}
\item Pair potential is constructed by \href{file:///home/tigany/lm/tb/makvpp.f}{makvpp.f}.
\item This calls \href{file:///home/tigany/lm/tb/vppder.f}{vppder.f} which actually evaluates the pair potential at that
point
\item In makvpp.f, if in the range of $r_1 < r < r_{\text{c}}$, then
augmentative/multiplicative polynomial is used.
\begin{itemize}
\item To make this polynomial \href{file:///home/tigany/lm/tb/pcut45.f}{pcut45.f} is used.
\item Depending on the degree of polynomial we have this structure:
\begin{verbatim}
      rr = r1 - r2
      xr1 = x - r1
      xr2 = x - r2

      c = val*rr*rr
      if (n == 5) then
	pnorm = rr**(-5)
	a = (0.5d0*curv*rr - 3d0*slo)*rr + 6d0*val
	b = (slo*rr - 3d0*val)*rr
      elseif (n == 4) then
	pnorm = rr**(-4)
	a = (0.5d0*curv*rr - 2d0*slo)*rr + 3d0*val
	b = (slo*rr - 2d0*val)*rr
      p2 = pnorm*(c + xr1*(b + xr1*a))
      dp2 = pnorm*(b + xr1*2d0*a)
      ddp2 = pnorm*2d0*a
      e = p2 * xr2**(n-2)
      de = (xr2*dp2 + float(n-2)*p2) * xr2**(n-3)
      dde = (xr2*xr2*ddp2+float(2*(n-2))*xr2*dp2+float((n-2)*(n-3))*p2)
C ... e, de and dde are the values and derivatives of the polynomial in the region r1 , r < rc
\end{verbatim}
\item So the form of the polynomial used is
\begin{itemize}
\item $$ P_5(x) = (x-r_2)^3 P_2(x)  $$
\item \[ P_2(x) = a(x-r1)^2 + b(x-r_1) + c \]
\item \[ a = \frac{1}{ (r1-r2)^5 } \big\{  \frac{1}{2}(r_1-r_2)^2f"(r_1) -3(r_1-r_2)f'(r_1) + 6f(r_1) \big\} \]
\item \[  b = \frac{1}{(r_1-r_2)^4} \big\{ f'(r_1)*(r_1-r_2) - 3f(r_1) \big\}  \]
\item \[ \frac{1}{(r_1 - r_2)^5} x \]
\item \[  c = \frac{ f(r_1) }{ (r_1-r_2)^3} \]
\item Where $f(x)$ is the function that needs to be cut
\end{itemize}
\end{itemize}
\item Current model has this
\begin{verbatim}
Ti,Ti:
   type 2 (Exp. decay), V(d) = a exp (- b d)
	     sss    sps    pps    ppp    sds    pds    pdp    dds    ddp    ddd
   coeff:   0.00   0.00   0.00   0.00   0.00   0.00   0.00  -2.75   1.84  -0.46
   decay:   0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.71   0.71   0.71
   cutoff type 2 (multiplicative), 5th order polynomial, range [r1, rc]
	     sss    sps    pps    ppp    sds    pds    pdp    dds    ddp    ddd
   r1:      0.00   0.00   0.00   0.00   0.00   0.00   0.00   6.20   6.20   6.20
   rc:      0.00   0.00   0.00   0.00   0.00   0.00   0.00   8.50   8.50   8.
\end{verbatim}
\item So bond integrals from
\end{itemize}

\subsection{Notes for the gamma surfaces}
\label{sec-2-2}
\begin{itemize}
\item Seems like some atoms are missing in the site file when it is being read
in to tbe.
\item This means that there are some erroneous forces that make the program
exit.
\begin{itemize}
\item Must investigate how the site file is written and see the difference
between the expected and resultant coordinates.
\end{itemize}
\end{itemize}


\subsection{Ti Swarm fitting.}
\label{sec-2-3}
\begin{itemize}
\item Here used fitting with uniform weights across all target quantities
without a regularisation of the parameters.
\item It can be seen that the lattice parameters aren't as good as they could
be. This calls for the use of weighted parameters.
\item Have now started weighted parameter search for the best parameters with
regards to titanium.
\end{itemize}

\begin{verbatim}
Build Objective Function
 ...with L1 norm 
| Quantity      |  predicted |     target | squared diff. |    p_norm |   weight |  objective |
|---------------+------------+------------+---------------+-----------+----------+------------|
| a_hcp:        |   4.744693 |   5.576790 |      0.692385 |  0.832097 | 1.000000 |   1.524483 |
| c_hcp:        |   7.495518 |   8.852101 |      1.840316 |  1.356583 | 1.000000 |   3.196899 |
| c_11:         | 174.924630 | 176.100000 |      1.381495 |  1.175370 | 1.000000 |   2.556865 |
| c_33:         | 190.161490 | 190.500000 |      0.114589 |  0.338510 | 1.000000 |   0.453099 |
| c_44:         |  54.517320 |  50.800000 |     13.818465 |  3.717320 | 1.000000 |  17.535784 |
| c_12:         |  65.010403 |  86.900000 |    479.154446 | 21.889597 | 1.000000 | 501.044043 |
| c_13:         |  73.335501 |  68.300000 |     25.356271 |  5.035501 | 1.000000 |  30.391772 |
| a_omega:      |   7.331279 |   8.732543 |      1.963543 |  1.401265 | 1.000000 |   3.364808 |
| c_omega:      |   4.768459 |   5.323431 |      0.307994 |  0.554972 | 1.000000 |   0.862966 |
| u_omega:      |   1.000025 |   1.000000 |      0.000000 |  0.000025 | 1.000000 |   0.000025 |
| DeltaE_O_hcp: |  -1.170318 |  -0.734754 |      0.189716 |  0.435564 | 1.000000 |   0.625281 |
| a_bcc:        |   5.331467 |   6.179489 |      0.719140 |  0.848021 | 1.000000 |   1.567162 |
| bandwidth:    |   0.325300 |   0.426000 |      0.010140 |  0.100700 | 1.000000 |   0.110840 |
Objective function: 563 

Objective Function = 563.2340263379571 
Stopping search: Swarm best position change less than 1e-08 
[ 0.34606728 -0.22330935 65.79555644 0.52284417 0. -0.62229341 1.98315066] 
563.2340263379571
\end{verbatim}

\section{Useful Notes}
\label{sec-3}
\subsection{Org-mode}
\label{sec-3-1}
\begin{verbatim}
(setq org-latex-create-formula-image-program 'dvipng)
\end{verbatim}

\subsection{Physics}
\label{sec-3-2}
\subsubsection{Hartree-Fock}
\label{sec-3-2-1}
\begin{itemize}
\item Hartree-Fock is a method of calculating the energy of a configuration
with exact exchange.
\item This is done by essentially putting everything we don't know into the
kinetic energy functional.
\item Hamiltonian is split into contributions:
\begin{itemize}
\item \[\hat{H} = \hat{T} + \hat{V}_{ \text{ext} } + \hat{G}\]
\item $\hat{G} = \hat{J} - \hat{K}$
\item $\hat{J}$ is the coulombic interaction:
\item \[ \bra{ \mathbf{r} } \hat{J} \ket{ \mathbf{n} } = \int \frac{ \bra{\mathbf{r}}\ket{n} }{|\mathbf{r} - \mathbf{r'}  |}d\mathbf{r} \]
\item So \[ E_{\text{H}} = \int \frac{\rho{\mathbf{r}\rho{\mathbf{r}'}}}{|\mathbf{r} - \mathbf{r'}|}\]
\item This includes fictitious self-interaction of electron density.
\item The Exchange functional removes this part, thus lowering the energy
\end{itemize}

\item This method is used in Hybrid DFT. This corrects band gaps mainly. But
there are also problems.
\end{itemize}


\section{DFT Lectures UCL}
\label{sec-4}
\subsection{David Bowler O(N) DFT}
\label{sec-4-1}
\subsubsection{Types of Exchange-correlation Functionals}
\label{sec-4-1-1}

\begin{enumerate}
\item LDA
\label{sec-4-1-1-1}
\begin{itemize}
\item The electron density is the same as a uniform electron gas.
\item Exchange is Slater.
\item Still parameterised (Ceperly). Parameters from Quantum Monte-Carlo
calculations.
\end{itemize}

\item GGA
\label{sec-4-1-1-2}
\begin{itemize}
\item The gradient of the electron density is included in functional.
\item Have the reduced density \[ \frac{ \nabla n(\mathbf{r})}{n( \mathbf{r}
       )}\].
\end{itemize}
\begin{enumerate}
\item Perdew-Burke-Ernzerhof
\label{sec-4-1-1-2-1}
\begin{itemize}
\item \[ E_{\text{x}} = \int n( \mathbf{r} ) \epsilon_{\text{xc}}[n( \mathbf{r}
        )] F_{\text{x}}(S)d\mathbf{r} \]
\item \[ E_{\text{c}} = \int n[ \epsilon_{\text{c}} + H(n,S) ]d\mathbf{r} \]
\item These integrals are then fitted to various limits.
\end{itemize}
\end{enumerate}

\item Hybrid Functionals
\label{sec-4-1-1-3}
\begin{itemize}
\item These are functionals to correct the self-interaction energy that is
apparent in the previously mentioned functionals.
\item The Hartree term \[V_{\text{H}}=\int \frac{\rho(\mathbf{r})}{|\mathbf{r} - \mathbf{r}'|} d\mathbf{r}  \]
\item The exchange term cancels the celf interaction.
\item Generally only a part of this Hartree-Fock calculation is included in
the function otherwise it is not stable.
\end{itemize}





DFT speed is limited by how it can find the energies of the system we are
interested in. 
Diagonalisation is inherently an $\mathcal{O}(N^3)$ process. 

To actually build the hamiltonian it is of $\mathcal{O}(N^2)$. 
Solving is $\mathcal{O}(N^3)$. 

How do we solve for DFT?
Generally it depends on the choice of functional we have. 
Hybrid functionals almost scale as $\mathcal{O}(N^4)$ due to the inclusion of exact
exchange interaction by Hartree-Fock. Because of this exact exchange, there
are better band gaps . 

The $\mathcal{O}(N)$ DFT generally comes because of the manipulation of sparse matrices. 
Insead of matrix multiplication being of $\mathcal{O}(N^3)$ we can have matrix
multiplication being of $\mathcal{O}(N)$. 

The reason we can essentially do $\mathcal{O}(N)$ is that in the Kohn-Sham equations, the
density is actually a local function ($n(\mathbf{r})$, not $n(\mathbf{r}-\mathbf{r}')$) 
This means that in theory we can actually have a theory which sufficiently
describes the dynamics of a given system with an electron density that is
local in space. 
In many DFT codes however, the electron density is non-local ($n(
\mathbf{r} - \mathbf{r}')$), and
this slows down the calculation. 
To actually make it $\mathcal{O}(N)$, we have to have range cutoffs for the interactions
of the atoms. This means that the hamilitonian is sparse as quite a lot of the
elements are zero such that we can use methods that involve $\mathcal{O}(N)$
multiplication. 

When it comes to Structural relaxation there are a few things that come to
mind when structures are not converging:
there is usually only one atom that has some huge force on it. 
Consider the boundary conditions. 

For faster diagonalisation of the hamiltonian matrix it may be useful to look
at methods such as Krylov-Subsapace, Lanczos and folded-spectrum methods.
\end{enumerate}

\subsection{Jochen Blumberger: Molecular dynamics}
\label{sec-4-2}

\begin{itemize}
\item Molecular dynamics is important. (Even at 0K there is a zero point energy
of vibration).
\item Need theory to see how atoms move
\end{itemize}

\subsubsection{Born-Oppenheimer approximation}
\label{sec-4-2-1}

\begin{itemize}
\item Have hamiltonian that consists of interaction between:
\begin{itemize}
\item nucleus-nucleus
\item nucleus-electron
\item electron-electron
\end{itemize}
\item First assumption is that we can write the eigenfunction of
this large hamiltonian as a product state consisting of an electronic
ground state and nuclear eigenstate.
\item Second approximation is that we are able to say, as the mass of the ion
$M_{I} \sim 1000 m_{e}$ then we can say that the kinetic energy term of
with regard to the nucleus positions will be small.
\item From this we can say that the action of this nuclear kinetic energy
operator on the electronic eigenstate is small.
\item This means we can neglect the \textbf{electronic} wavefunction, and work with
the equation \[ \hat{H}\Phi(\mathbf{R}) = E^0_{\mathbf{R}}\Phi(\mathbf{R}) \]
\begin{itemize}
\item Where $E^{0}_{ \mathbf{R} }$ is the ground state energy hypersurface
from the electronic wavefunction. We get this from DFT calculations.
\end{itemize}
\item Even now we can only really calculate 8 degrees of freedom for the
Nuclear wavefunction.
\end{itemize}

\subsubsection{Molecular Dynamics}
\label{sec-4-2-2}

\begin{enumerate}
\item Verlet Algorithm
\label{sec-4-2-2-1}
\begin{itemize}
\item This algorithm simply uses the forward and backward derivative of the
nuclear positions and adds them together to get a formula for the
positon.
\begin{itemize}
\item \[ \mathbf{R}_{I}(t + \delta t) = 2\mathbf{R}_{I} -
         \mathbf{R}_{I}(t - \delta t) + \frac{f_I(t)}{M_{I}}\delta t^3 \mathcal{O}(\delta t^{4})  \]
\item \[ \mathbf{\dot{R}}_{I}(t) = \frac{1}{2 \delta t} [
         \mathbf{R}_{I}(t + \delta t) - \mathbf{R}_{I}(t - \delta t) ] + \mathcal{O}(\delta t^{3})  \]
\item This causes a problem however: the velocity is calculated a step
after that of the positons. So this leads to the Velocity Verlet
algorithm.
\end{itemize}
\end{itemize}

\item Velocity Verlet Algorithm
\label{sec-4-2-2-2}
\begin{itemize}
\item For this algorithm the forward derivative with respect to nuclear
positions is used with a calculation of the force at a later time.
\item Then the taylor expansion of the position at time t is used with the
terms of later time.
\item \[ \mathbf{R}_{I}(t + \delta t) = \mathbf{R}_{I}(t) +
       \mathbf{\dot{R}}_{I}\delta t + \frac{f_I(t)}{M_{I}}\delta t^3 + \mathcal{O}(\delta t^{3})  \]
\item \[ \mathbf{ \dot{R} }_{I}(t + \delta t) = \mathbf{\dot{R}}_{I}(t) +  \frac{1}{2 M_{I}} [ \mathbf{f}_{I}(t + \delta t) + \mathbf{R}_{I}(t)  ] + \mathcal{O}(\delta t^{3})  \]
\end{itemize}

\item How to calculate the forces
\label{sec-4-2-2-3}
\begin{itemize}
\item Use the Hellmann-Feynman theorem.
\begin{itemize}
\item $$ \mathbf{f}_{I} = < \psi^{0}_{\mathbf{R}} | \frac{\partial}{\partial   \mathbf{R}_{I}}\hat{H} |\psi^{0}_{\mathbf{R}} >   $$
\end{itemize}
\end{itemize}
\end{enumerate}



\section{org-mode cheat sheet}
\label{sec-5}
\begin{itemize}
\item New TODO: M-<shift>-<ret>
\item Done TODO: C-c C-t
\item Links: [[][]] [link] then [description]
\item Open link: Move over cursor and do C-c C-o
\item Link to local files:
\begin{itemize}
\item Open file (C-x C-f) then do C-c l,
\item then go back to org file and do C-c C-l (e.g. \href{file:///home/tigany/Documents/docs/PhDPaperSummary/upgrade_rep_plus_notes.tex}{Upgrade$_{\text{report}}$$_{\text{plus}}$$_{\text{notes}}$})
\end{itemize}
\item To remove window in buffer C-x 0
\item Overview of document <shift>-<TAB> to condense to titles.
\item Can have global todo list
\item < s TAB expands to a ‘src’ code block.
\item < l TAB expands to:
\end{itemize}
\begin{export}
\end{export}


\begin{itemize}
\item If I want more help I can go to the \href{https://orgmode.org/manual/}{org-mode manual}
\end{itemize}
% Emacs 25.3.1 (Org mode 8.2.10)
\end{document}
